import { type NextPage } from 'next';
import Head from 'next/head';
import { signIn, signOut, useSession } from 'next-auth/react';

import { api } from '~/utils/api';
import { Button, Container, Grid } from '@mui/material';

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: 'from tRPC' });
  const askOpenAiQuestion = api.openAi.askQuestion.useQuery({
    question: 'What is the meaning of life?',
  });

  return (
    <>
      <Head>
        <title>Create NPX App</title>
        <meta
          name="description"
          content="Generated by create-npx-app"
        />
        <link
          rel="icon"
          href="/favicon.ico"
        />
      </Head>
      <main>
        <Container>
          <Grid
            container
            justifyContent={'center'}
            alignContent={'center'}
            textAlign={'center'}
          >
            <AuthShowcase />
            <Grid
              item
              xs={12}
            >
              <p>
                {hello.data ? hello.data.greeting : 'Loading tRPC query...'}
              </p>
            </Grid>
            <Grid
              item
              xs={12}
            >
              <p>
                {askOpenAiQuestion.data
                  ? askOpenAiQuestion.data.content
                  : 'Loading OpenAI query...'}
              </p>
            </Grid>
          </Grid>
        </Container>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <>
      <Grid
        item
        xs={12}
      >
        <p>
          {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
          {secretMessage && <span> - {secretMessage}</span>}
        </p>
      </Grid>
      <Grid
        item
        xs={12}
      >
        <Button
          variant="contained"
          onClick={sessionData ? () => void signOut() : () => void signIn()}
        >
          {sessionData ? 'Sign out' : 'Sign in'}
        </Button>
      </Grid>
    </>
  );
};
